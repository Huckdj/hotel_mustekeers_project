{"ast":null,"code":"var _jsxFileName = \"D:\\\\DoAnReactjs\\\\hotel-musketeers\\\\src\\\\musketeers_hotel\\\\component\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport axios from \"axios\";\nimport { ToastContainer, toast, Slide } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Router, Route } from \"react-router-dom\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [role, setRole] = useState(\"\");\n  let navi = useHistory();\n  //\n  const handleLogin = () => {\n    axios.get(`http://localhost:4000/users?username=${username}&password=${password}`).then(response => {\n      if (response.data.success === true) {\n        setRole(response.data.role);\n        if (role === \"admin\") {\n          history.replace(\"/admin\");\n        }\n        // Hiển thị thông báo khi đăng nhập thành công\n        toast(response.data.message, {\n          position: \"top-center\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\",\n          transition: Slide\n        });\n        // Sau đó, thực hiện các hành động cần thiết (ví dụ: điều hướng người dùng đến trang chính)\n      } else {\n        // Đăng nhập thất bại, hiển thị thông báo cho người dùng\n        toast(response.data.message, {\n          position: \"top-center\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\",\n          transition: Slide\n        });\n      }\n    }).catch(error => {\n      // Xử lý lỗi khi yêu cầu không thành công\n      toast.error(\"Sai tên tài khoản hoặc mật khẩu\", {\n        position: \"top-center\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n        transition: Slide\n      });\n    });\n  };\n  //\n  const redirectToPage = () => {\n    if (role === \"admin\") {\n      /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this);\n    } else if (role === \"user\") {\n      window.location.href = \"/homepage\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0110\\u0103ng nh\\u1EADp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"username\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"M\\u1EADt kh\\u1EA9u\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogin,\n          children: \"\\u0110\\u0103ng nh\\u1EADp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-center\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      pauseOnHover: true,\n      theme: \"light\",\n      transition: Slide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(Login, \"c1G9EfEil5Fv5pknfR/lHPCtjxc=\", true);\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Header","axios","ToastContainer","toast","Slide","Router","Route","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","username","setUsername","password","setPassword","role","setRole","navi","useHistory","handleLogin","get","then","response","data","success","history","replace","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","transition","catch","error","redirectToPage","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","window","location","href","type","placeholder","value","onChange","e","target","onClick","newestOnTop","rtl","pauseOnFocusLoss","_c","$RefreshReg$"],"sources":["D:/DoAnReactjs/hotel-musketeers/src/musketeers_hotel/component/Login.js"],"sourcesContent":["import React , {useState, useEffect}from \"react\";\r\nimport Header from \"./Header\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast,Slide  } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {Router, Route } from \"react-router-dom\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nexport default function Login(){\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [role, setRole] = useState(\"\");\r\n    let navi = useHistory();\r\n    //\r\n    const handleLogin = () => {\r\n        axios.get(`http://localhost:4000/users?username=${username}&password=${password}`)\r\n            .then(response => {\r\n                if (response.data.success === true) {\r\n                    setRole(response.data.role);\r\n                    if (role === \"admin\") {\r\n                        history.replace(\"/admin\")\r\n                    }\r\n                    // Hiển thị thông báo khi đăng nhập thành công\r\n                    toast(response.data.message,{\r\n                        position: \"top-center\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        theme: \"light\",\r\n                        transition: Slide,\r\n                    });\r\n                    // Sau đó, thực hiện các hành động cần thiết (ví dụ: điều hướng người dùng đến trang chính)\r\n                } else {\r\n                    // Đăng nhập thất bại, hiển thị thông báo cho người dùng\r\n                    toast(response.data.message,{\r\n                        position: \"top-center\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        theme: \"light\",\r\n                        transition: Slide,\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                // Xử lý lỗi khi yêu cầu không thành công\r\n                toast.error(\"Sai tên tài khoản hoặc mật khẩu\", {\r\n                  position: \"top-center\",\r\n                  autoClose: 5000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  draggable: true,\r\n                  progress: undefined,\r\n                  theme: \"light\",\r\n                  transition: Slide,\r\n                });\r\n              });\r\n    };\r\n    //\r\n    const redirectToPage = () => {\r\n        if (role === \"admin\") {\r\n            <Router>\r\n                <Route path='/login' element={<Login/>}/>\r\n            </Router>\r\n        } else if (role === \"user\") {\r\n            window.location.href = \"/homepage\";\r\n        }\r\n    };\r\n    return(\r\n        <>\r\n            <Header />\r\n                <div>\r\n                    <div>\r\n                        <h2>Đăng nhập</h2>\r\n                        <input\r\n                            type=\"username\"\r\n                            placeholder=\"Username\"\r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Mật khẩu\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                        <button onClick={handleLogin}>Đăng nhập</button>\r\n                    </div>\r\n                </div>\r\n                <ToastContainer\r\n                    position=\"top-center\"\r\n                    autoClose={5000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover\r\n                    theme=\"light\"\r\n                    transition= {Slide}\r\n                />\r\n        </>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}